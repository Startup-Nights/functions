name: deploy-digitalocean-functions

on: [push, workflow_dispatch]

env:
  GO_VERSION: stable
  GOLANGCI_LINT_VERSION: v1.60

jobs:
  detect-modules:
    runs-on: ubuntu-latest
    outputs:
      modules: ${{ steps.set-modules.outputs.modules }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - id: set-modules
        run: echo "modules=$(go list -m -json | jq -s '.' | jq -c '[.[].Dir][1:]')" >> $GITHUB_OUTPUT

  golangci-lint:
    needs: detect-modules
    runs-on: ubuntu-latest
    strategy:
      matrix:
        modules: ${{ fromJSON(needs.detect-modules.outputs.modules) }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      - name: golangci-lint ${{ matrix.modules }}
        uses: golangci/golangci-lint-action@v6
        with:
          version: ${{ env.GOLANGCI_LINT_VERSION }}
          working-directory: ${{ matrix.modules }}

  deploy-functions:
    needs: golangci-lint
    runs-on: ubuntu-latest
    environment: prod
    steps:
      - name: checkout code
        uses: actions/checkout@v4

      - name: install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: install serverless plugin
        run: doctl serverless install

      - name: connect to serverless namespace
        run: doctl serverless connect

      - name: deploy functions
        run: bash deploy.sh
        env:
          BUCKET: ${{ secrets.BUCKET }}
          SECRET: ${{ secrets.SECRET }}
          REGION: ${{ secrets.REGION }}
          KEY: ${{ secrets.KEY }}
          CREDENTIALS: ${{ secrets.CREDENTIALS }}
          GMAIL: ${{ secrets.GMAIL }}
          SHEETS: ${{ secrets.SHEETS }}

      - name: verify validity of credentials
        run: |
          [[ $(curl -X POST "https://faas-fra1-afec6ce7.doserverless.co/api/v1/web/fn-70cb3437-eee1-474d-8ad6-387035b15671/website/sheets" -H "Content-Type: application/json" -d '{"id":"1WX6vvcCJihBJ9tFN-8AixYAyt5i1nSfMeX81gsEEwjs","range":"A:AL"}' | jq '.data | length') -gt 1 ]] && exit 0 || exit 1
